@model List<BTL_Web.Controllers.CartController.OrderProductDTO>

<style>
    body {
        font-family: 'Arial', sans-serif;
        background-color: #f4f4f4;
        margin: 0;
        padding: 0;
    }

    #cart-container {
        margin: 50px auto;
        max-width: 100%;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        padding: 20px;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
    }

    th,
    td {
        border-bottom: 1px solid #ddd;
        padding: 15px;
        text-align: left;
    }

    th {
        background-color: #f2f2f2;
    }

    img {
        width: 80px;
        height: 80px;
        border-radius: 4px;
        margin-right: 10px;
    }

    .product-info {
        display: flex;
        align-items: center;
    }

    .price-info {
        display: flex;
        align-items: center;
    }

    .quantity-control {
        display: flex;
        align-items: center;
    }

    .btn-delete {
        padding: 8px 16px;
        font-size: 14px;
        background-color: #dc3545;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .btn-delete:hover {
        background-color: #c82333;
    }

    #customer-info {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        margin-bottom: 20px;
    }

    #customer-info div {
        flex: 0 0 48%;
        margin-bottom: 10px;
    }

    input {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
    }

    #dathang {
        padding: 10px 20px;
        font-size: 16px;
        background-color: #4CAF50;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    #dathang:hover {
        background-color: #45a049;
    }

    #empty-cart {
        font-size: 20px;
        color: red;
        text-align: center;
    }

    .error {
        color: red;

    }
</style>

<div id="cart-container">
    @if (Model.Count > 0)
    {
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">
                        <input type="checkbox" id="checkboxAll" />
                    </th>
                    <th scope="col">Sản phẩm</th>
                    <th scope="col">Đơn giá</th>
                    <th scope="col">Số lượng</th>
                    <th scope="col">Xóa</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var Order in Model)
                {
                    <tr id="@Order.OrderId">
                        <td>
                            <input type="checkbox" data-id="@Order.OrderId" />

                        </td>
                        <td>
                            <div class="product-info">
                                <img src="@Order.ProductImg" />
                                <p>@Order.ProductName</p>
                            </div>
                        </td>
                        <td>
                            <div class="price-info">
                                <p>Đơn giá: @Order.ProductPrice</p>
                            </div>
                        </td>
                        <td>
                            <div class="quantity-control">
                                <button class="Tru" data-id="@Order.OrderId" onclick="decrementQuantity(this)">-</button>
                                <input type="text" value="@Order.SoLuong" id="@Order.OrderId" class="@Order.OrderId"
                                    style="width: 50px; height: 30px" readonly />
                                <button class="Cong" data-id="@Order.OrderId" onclick="incrementQuantity(this)">+</button>
                            </div>
                        </td>
                        <td>
                            <button data-id="@Order.OrderId" class="btn-delete">Xóa</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div id="totalPrice">
            Tổng tiền
        </div>
        <div id="customer-info">
            <div>
                <p>Họ và tên:</p>
                <input type="text" id="fullName" />
                <span id="fullNameError" class="error"></span>
            </div>
            <div>
                <p>Số điện thoại:</p>
                <input type="text" id="phoneNumber" />
                <span id="phoneNumberError" class="error"></span>
            </div>
            <div>
                <p>Địa chỉ:</p>
                <input type="text" id="address" />
                <span id="addressError" class="error"></span>
            </div>
        </div>

        <div>
            <button id="dathang">Đặt hàng</button>
        </div>
    }
    else
    {
        <div id="empty-cart">Chưa có đơn hàng nào</div>
    }
</div>




<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>

    function updateTotalPrice() {
        var total = 0;

        // Iterate through each row in the table
        $("tbody tr").each(function () {
            var quantity = parseInt($(this).find(".quantity-control input").val());
            var price = parseFloat($(this).find(".price-info p").text().replace("Đơn giá: ", "").replace(",", ""));

            total += quantity * price;
        });

        // Display the total in the #totalPrice element
        $("#totalPrice").text("Tổng tiền: " + total.toLocaleString() + " VNĐ");
    }

    var array = []

    document.addEventListener('DOMContentLoaded', function () {
        // Function to handle checkbox click
        function handleCheckboxClick(checkbox) {
            var orderId = checkbox.getAttribute("data-id");
            var isChecked = checkbox.checked;
            var checkItem = $("input[type='checkbox']").attr("data-id");


            if (isChecked && orderId === null) {
                array = []; // Khai báo mảng ở đây để tránh lỗi không mong muốn
                $(".btn-delete").each(function () {
                    var btnDataId = $(this).data("id");
                    array.push(btnDataId);



                    checkboxes.forEach(function (checkbox) {
                        checkbox.checked = true;
                        updateTotalPrice()
                    });
                });

            }
            else if (isChecked == false && orderId == null) {
                array = []

                checkboxes.forEach(function (checkbox) {
                    checkbox.checked = false;
                });

            }
            else {
                // Add your logic here to handle the checkbox state
                if (isChecked) {
                    array.push(orderId)
                    updateTotalPrice()

                    console.log("Checkbox with ID " + orderId + " is checked");

                } else {

                    array = array.filter(function (value) {
                        return value !== orderId;
                    });


                    // Checkbox is unchecked, perform actions for unchecked state
                    console.log("Checkbox with ID " + orderId + " is unchecked");
                    // Add your code to process the unchecked state as needed
                }
            }
        }

        // Get all checkboxes
        var checkboxes = document.querySelectorAll('input[type="checkbox"]');


        // Add event listener for each checkbox
        checkboxes.forEach(function (checkbox) {
            checkbox.addEventListener('change', function () {
                handleCheckboxClick(this);
            });
        });

        // ... Your existing code ...

    });



    function decrementQuantity(button) {
        var id = button.getAttribute("data-id");
        console.log(id)
        var elementsWithClass = document.getElementsByClassName(id);

        var inputValue = elementsWithClass[0].value;
        var soluongAsNumber = parseInt(inputValue, 10);


        if (soluongAsNumber > 1) {
            fetch("/Cart/SoLuongTru", {
                method: "POST",
                headers: {
                    "Content-Type": "application/x-www-form-urlencoded",
                },
                body: "id=" + id// Convert to JSON string
            })
                .then((data) => {
                    return data.json()
                })
                .then((data) => {
                    window.location.reload();


                    var inputElement = document.getElementById(id);
                    if (inputElement) {
                        inputElement.querySelector('input').value = data.product.soLuong;
                    } else {
                        console.error("Input element not found!");
                    }

                })
                .catch(err => {
                    console.log(err)
                })
        }
        else {
            alert('Sản phẩm phải lơn hơn 1')
        }
    }

    function incrementQuantity(button) {
        var orderId = button.getAttribute("data-id");
        fetch("/Cart/SoLuongCong", {
            method: "POST",
            headers: {
                "Content-Type": "application/x-www-form-urlencoded",
            },
            body: "id=" + orderId
        })
            .then((data) => {
                return data.json()
            })
            .then((data) => {
                window.location.reload();

                var inputElement = document.getElementById(orderId);
                if (inputElement) {
                    inputElement.querySelector('input').value = data.product.soLuong;
                } else {
                    console.error("Input element not found!");
                }
            })
            .catch(err => {
                console.log(err)
            })
        // TODO: Update the server-side data or perform any other necessary action
    }



    //datdtj hangf
    document.getElementById('dathang').addEventListener('click', () => {
        var fullName = document.getElementById("fullName").value;
        var phoneNumber = document.getElementById("phoneNumber").value;
        var address = document.getElementById("address").value;

        if (fullName.trim() !== "" && phoneNumber.trim() !== "" && address.trim() !== "") {
            var orderIds = [];
            $(".btn-delete").each(function () {
                orderIds.push($(this).data("id"));
            });

            console.log({ array })

            var value = {
                fullName: fullName,
                phoneNumber,
                address,
                orderIds: array
            }

            console.log(value)


            // Now orderIds array contains all OrderIds
            fetch("/Cart/DatHang", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",

                },
                body: JSON.stringify(value)

            })
                .then((data) => {
                    return data.json();
                })
                .then((data) => {
                    alert('Đặt hàng thành công!!!')
                    window.location.reload();
                    console.log({ data });
                })
                .catch(err => {
                    console.log(err);
                });

        }
        else {
            // Validate full name
            if (fullName.trim() === "") {
                document.getElementById("fullNameError").innerHTML = "Họ và tên không được để trống";
            }

            // Validate phone number
            if (phoneNumber.trim() === "") {
                document.getElementById("phoneNumberError").innerHTML = "Số điện thoại không được để trống";
            }

            // Validate address
            if (address.trim() === "") {
                document.getElementById("addressError").innerHTML = "Địa chỉ không được để trống";
            }
        }
    });



    $(document).ready(function () {
        $(".btn-delete").click(function () {
            var hanghoaId = $(this).data("id");
            console.log(hanghoaId)
            if (confirm("Có chắc chắn muốn xoá không?")) {
                $.ajax({
                    url: '/Cart/DeleteCart',
                    method: 'delete',
                    data: { id: hanghoaId },
                    success: function (result) {
                        if (result.success) {
                            window.location.reload();

                            document.getElementById(hanghoaId).remove()
                            alert("Xoas thanh cong")
                        } else {
                            alert("Không thể xóa hàng hoá.");
                        }
                    }
                });
            }
        });
    });



</script>